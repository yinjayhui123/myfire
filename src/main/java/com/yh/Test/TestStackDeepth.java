package com.yh.Test;

import org.apache.http.HttpEntity;
import org.apache.http.HttpStatus;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * @Author: yinhui
 * @Date: 2019/9/5 16:38
 * @Version 1.0
 */
public class TestStackDeepth {

    private static final Logger logger = LoggerFactory.getLogger(TestStackDeepth.class);

    private static CloseableHttpClient httpclient2 = null;

    private static CloseableHttpClient getHttpClient(){

        if(httpclient2 == null){

            synchronized (TestStackDeepth.class){
                if(httpclient2 == null){
                    httpclient2 = HttpClients.createDefault();
                }
            }

        }
        return httpclient2;

    }


    /**
     * 处理post请求.
     *
     * @param params
     *            参数
     * @return json
     */
    public static String post(String url, Map<String, String> params) {
        String methodName = "post";

        logger.info("[开始post请求, URL={}, 参数={}]", url, params);

        // （1）实例化 一个 客户发请求类httpClient，用来发送下面的post请求
        CloseableHttpClient httpclient = HttpClients.createDefault();
        // （2）实例化 一个 post方法，用来当做容器存放具体传的参数
        HttpPost httpPost = new HttpPost(url);
        // （3）处理参数，将传过来的map类型的键值对，通过循环 做成 NameValuePair 泛型 的
        // list，也就是实际上最终传的是list
        List<NameValuePair> nvps = HttpClientHandler.buildNameValuePair(params);
//        logger.info("[开始post请求,  nvps={}]", nvps);

        // 结果
        CloseableHttpResponse response = null;
        String content = "";
        try {
            // （4）提交的参数：将转化后的list进行编码过滤处理
            UrlEncodedFormEntity uefEntity = new UrlEncodedFormEntity(nvps, "UTF-8");
            // （5）将参数给post方法
            httpPost.setEntity(uefEntity);
            HttpEntity entityss = httpPost.getEntity();
            String v = EntityUtils.toString(entityss, "UTF-8");
//            logger.info("[开始post请求,  v={}]", v);

            // （6）执行post方法
            response = httpclient.execute(httpPost);
            if ("OK".equals(response.getStatusLine().getReasonPhrase())
                    || response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
                // （7）最终返回结果是个string返回来，传到上面一层方法中去。
                content = EntityUtils.toString(response.getEntity(), "UTF-8");
            }
        } catch (Exception e) {
            logger.error("调用异常...", e);
        } finally {
            if (response != null) {
                try {
                    response.close();
                } catch (IOException e) {
                    logger.error("调用异常...", e);
                }
            }
            if (httpclient != null) {
                try {
                    httpclient.close();
                } catch (IOException e) {
                    logger.error("调用异常...", e);
                }
            }

            logger.info("[结束post请求]");
        }
        return content;
    }

    public static void main(String[] str){

        ExecutorService service = Executors.newFixedThreadPool(10);
        for (int i = 1 ; i <= 10 ;i++){
            service.execute(new ThreadPoolTask());
        }

        service.shutdown();
//
//
//        Map<String,String> map1 = new HashMap<>();
//        map1.put("phone","15653555505,13484719271,18144035863,15964255945,18618101087,13698680068,18811797770,15849345144,15005417900,13535098844,13281888379,18249993247,13400661485,13352360237,13400548435,18661077138,13869368102,18365204928,15268863902,15826730456,15948996812,18089504797,18072001056,13430645153,13552152377,15540243957,13627945973,18155537891,13248738461,18037769626,15533590334,13953632781,15630136182,13802627353,13827784589,13802621874,13827786834,13327889291,13925955307,15662791906,13827766467,13925958946,13703076704,15604710303,13413342091,13827766754,13929991466,13929974902,13789966521,15511394483,13929987715,15222147755,13929939526,13827786148,15112587564,13428868134,13923134996,15976095516,15596794645,13589581688,15893800799,18765196032,18669852324,15236498765,18653278379,18364218100,18653056673,13598736471,18768480514,15825632562,13210169902,13792819662,15986478523,13963389940,15589871535,15689935225,13405323072,15010050862,13153208159,18296797450,18638090696,13573573083,18904108500,15275323425,13220838791,13686363765,13409027397,15052015173,13141370321,13455537546,13997588999,13662240947,15078144960,15282530236,15190050369,13910606126,15815845464,13154861123,13559387325,18701463837,18053131871,15658545452,14598754126,13673197521,15869842587,15953876171,15047997727,13624961637,17773118186,15015266375,13005440529,13616307935,13863974115,14762266470,19264300059,19353589059,18990171652,18055321001,11111111226,17712416676,13853290889,15002308054,15553126282,15977668131,13012588111,13698651129,15638535390,15664379440,15955815060,13561621818,15941237320,15529411423,18815718469,15006618253,15204899121,18319328925,18652337126,13618116392,13871621741,15940127951,18530938491,18660567772,13635517758,13062989101,15764231911,18535302648,13437336288,18868163593,18777878706,15706845945,18296990426,15100559139,13687666015,18439055894,18937732335,15949847718,18906308719,13007362573,15954493172,15562113657,13346244111,13754617154,13953215963,18225880533,18563933150,15166079010,17685905217,17664133191,13626395371,13361188337,13473028444,15098726861,18561390291,13176396367,13573720037,18660412013,15527187070,18162117875,15676305342,18583302007,13661174571,15054266089,13961033458,18669372310,13063759372,18138351956,18012540080,17076605131,13370983757,18970121395,13001644621,18970695773,15254595346,13863081899,13104501814,13432825952,13181114129,15392981554,18505203332,13534021170");
//
//        Map<String,String> map2 = new HashMap<>();
//        map2.put("phone","13864870959,13863880868,13061139075,13906429141,13276315212,15951216998,15854136952,13710776034,18559668090,15192627558,18586904189,17091830548,15553057877,18263125173,15107719929,18210602165,13250786351,18439643970,15827217467,13816241605,15065126789,13964815899,15010640600,13506316568,15547129874,18067906129,18669330817,13864835818,15814771796,13404446101,15333880678,15563229401,15762281025,18101073128,15192284379,13869038201,13676316343,13455280755,15563106310,18563117456,18909413553,18806316771,15351992328,15834959146,13371168276,15617685115,13046457162,15263147955,13562102030,13061490807,15725270287,15588625365,13153262176,15192601651,13650455494,13863086937,17660236440,13791935656,13706146889,18603642570,13721921756,18616167338,13406809817,13869094166,15715425282,15376602825,13210905551,13383131327,18806319987,13503849588,15684592290,18766307573,15098130018,15092997158,13859881868,13608936061,18995910271,13140923599,18389152107,13685283988,13764334294,15951625884,18463126388,18653289297,18562176280,13573738085,13409078136,18522673130,13854712385,15898872739,18605351372,15251902661,13792790930,15121306921,18906747716,15065509236,18817355822,15666302069,18093465849,17074229534,18682198821,17713598087,17317631893,13159258348,13863161405,18578964223,15871866255,13884642277,15755193188,15271161329,13849626824,13589210846,15004676753,15952173154,13666316129,15966553284,13666307579,13712113005,13870961912,13627147026,13905205202,18537955203,18310862505,15212587275,13671919800,15524329689,17192779471,13573899206,17776226835,15157905644,17055982448,15754859044,15372067455,18759886778,15501288884,15688555665,18561303590,18561159875,13066983603,15586783451,13854212826,13964867583,18689949015,13061204607,18156837076,15666269427,13687685157,15517170756,15759002393,13105158198,18970766497,18624766121,13562523240,15634365011,18948315576,15151605176,13386533057,15944796198,15285415485,13336308220,15370156372,18815387538,15851993010,13961417158,18627442332,15275256818,18692062358,15504275662,13930590989,15737171602,15143376970,13961415016,15192699469,13476162003,15254592456,15070939224,13860132630,13643303219,18562173910,13646317667,15326539430,15963882212,17796654948,13792706139,18221862298,18354206310,13839003976,13205424178,18101323522,13011648662,13045002425,18663161390,13806315489,15154003731,16622809553,18172069613,13188992662,15221107118,15997260324,15263586689");
//
//        Map<String,String> map3 = new HashMap<>();
//        map3.put("phone","15723915619,17398180932,13306483566,17133514881,17174380914,13439483674,13035242228,15106549200,18263637107,18660378077,13563171363,13516217818,18654332877,15867221013,13969185414,13686377852,17072181549,18670872217,13371003847,15808329263,18939850380,15860731700,15027338135,17864398538,15906370982,13062090562,13864015098,15665761235,15102582476,18323545520,13519131739,13793988273,13792739817,17562715035,18100732660,17694992926,17345794277,13776851898,15106316091,18868100074,15059411359,15609443218,18794616196,13419219193,13811488549,18660935653,18955886611,18706494367,15000974595,13354483770,13648867931,15506397099,15806563400,18607057235,18216847631,15006789655,18842380732,15970089708,13882228052,15315521052,15666636279,18735112437,18235555590,15970552283,15970470053,17852226387,18939230736,17721255065,13181074978,13636493579,13701656456,17625856253,13367262573,13696312145,18349158626,13993602582,15692883161,18903631160,13301670986,18089010170,18560015089,18231438468,13377892001,15275183603,13027354664,17647478248,13961454714,15606769011,15269999228,13784924998,17695186602,15980814923,17623344759,13817133311,18317218923,18769111852,13547493817,13979077228,18729068334,15883827333,13297803546,13797220606,15678986745,13983249312,13604565557,13433233648,17630526404,13326312559,13526012534,18193647447,18560192298,15635830428,13033030692,13581149333,15501444115,13243076975,15156625014,17696561131,17863716765,13855464051,15570423164,15163972359,13426670145,15014567693,17174428637,15616580772,13681953147,18638805694,17078041022,15564663165,15650572065,15653771742,18731466975,13403411175,13966479074,13197664695,15729422788,13282423492,13053961157,15578738032,13095813604,17131536147,15061526999,13972241150,15271340942,13268738439,18256156754,13526100571,13030190279,15552638565,13923044745,18774437121,18331690040,15636058396,13400617399,15965955590,18781905044,15666624621,13455633634,17052972858,15142917551,18087642248,15065729528,15730556195,18408185143,17086036952,13189185863,15346198577,18756351945,13624637945,15898018101,13045751232,18387073507,18779463654,18482341928,18483660706,18773144431,18718816410,13455766983,13666677436,15393179230,18766370775,15753785174,13099125503,13759457528,15031723804,15127287052,15390443283,17638585463,13969646615,15961290826,15192325537,18295549647,13061349289,18837628285,13365269043,15066169752,18112024455,18039576581,15964963976");
//
//        Map<String,String> map4 = new HashMap<>();
//        map4.put("phone","15723915612,17398180932,13306483566,17133514881,17174380914,13439483674,13035242228,15106549200,18263637107,18660378077,13563171363,13516217818,18654332877,15867221013,13969185414,13686377852,17072181549,18670872217,13371003847,15808329263,18939850380,15860731700,15027338135,17864398538,15906370982,13062090562,13864015098,15665761235,15102582476,18323545520,13519131739,13793988273,13792739817,17562715035,18100732660,17694992926,17345794277,13776851898,15106316091,18868100074,15059411359,15609443218,18794616196,13419219193,13811488549,18660935653,18955886611,18706494367,15000974595,13354483770,13648867931,15506397099,15806563400,18607057235,18216847631,15006789655,18842380732,15970089708,13882228052,15315521052,15666636279,18735112437,18235555590,15970552283,15970470053,17852226387,18939230736,17721255065,13181074978,13636493579,13701656456,17625856253,13367262573,13696312145,18349158626,13993602582,15692883161,18903631160,13301670986,18089010170,18560015089,18231438468,13377892001,15275183603,13027354664,17647478248,13961454714,15606769011,15269999228,13784924998,17695186602,15980814923,17623344759,13817133311,18317218923,18769111852,13547493817,13979077228,18729068334,15883827333,13297803546,13797220606,15678986745,13983249312,13604565557,13433233648,17630526404,13326312559,13526012534,18193647447,18560192298,15635830428,13033030692,13581149333,15501444115,13243076975,15156625014,17696561131,17863716765,13855464051,15570423164,15163972359,13426670145,15014567693,17174428637,15616580772,13681953147,18638805694,17078041022,15564663165,15650572065,15653771742,18731466975,13403411175,13966479074,13197664695,15729422788,13282423492,13053961157,15578738032,13095813604,17131536147,15061526999,13972241150,15271340942,13268738439,18256156754,13526100571,13030190279,15552638565,13923044745,18774437121,18331690040,15636058396,13400617399,15965955590,18781905044,15666624621,13455633634,17052972858,15142917551,18087642248,15065729528,15730556195,18408185143,17086036952,13189185863,15346198577,18756351945,13624637945,15898018101,13045751232,18387073507,18779463654,18482341928,18483660706,18773144431,18718816410,13455766983,13666677436,15393179230,18766370775,15753785174,13099125503,13759457528,15031723804,15127287052,15390443283,17638585463,13969646615,15961290826,15192325537,18295549647,13061349289,18837628285,13365269043,15066169752,18112024455,18039576581,15964963976");
//
//        Map<String,String> map5 = new HashMap<>();
//        map5.put("phone","15723915613,17398180932,13306483566,17133514881,17174380914,13439483674,13035242228,15106549200,18263637107,18660378077,13563171363,13516217818,18654332877,15867221013,13969185414,13686377852,17072181549,18670872217,13371003847,15808329263,18939850380,15860731700,15027338135,17864398538,15906370982,13062090562,13864015098,15665761235,15102582476,18323545520,13519131739,13793988273,13792739817,17562715035,18100732660,17694992926,17345794277,13776851898,15106316091,18868100074,15059411359,15609443218,18794616196,13419219193,13811488549,18660935653,18955886611,18706494367,15000974595,13354483770,13648867931,15506397099,15806563400,18607057235,18216847631,15006789655,18842380732,15970089708,13882228052,15315521052,15666636279,18735112437,18235555590,15970552283,15970470053,17852226387,18939230736,17721255065,13181074978,13636493579,13701656456,17625856253,13367262573,13696312145,18349158626,13993602582,15692883161,18903631160,13301670986,18089010170,18560015089,18231438468,13377892001,15275183603,13027354664,17647478248,13961454714,15606769011,15269999228,13784924998,17695186602,15980814923,17623344759,13817133311,18317218923,18769111852,13547493817,13979077228,18729068334,15883827333,13297803546,13797220606,15678986745,13983249312,13604565557,13433233648,17630526404,13326312559,13526012534,18193647447,18560192298,15635830428,13033030692,13581149333,15501444115,13243076975,15156625014,17696561131,17863716765,13855464051,15570423164,15163972359,13426670145,15014567693,17174428637,15616580772,13681953147,18638805694,17078041022,15564663165,15650572065,15653771742,18731466975,13403411175,13966479074,13197664695,15729422788,13282423492,13053961157,15578738032,13095813604,17131536147,15061526999,13972241150,15271340942,13268738439,18256156754,13526100571,13030190279,15552638565,13923044745,18774437121,18331690040,15636058396,13400617399,15965955590,18781905044,15666624621,13455633634,17052972858,15142917551,18087642248,15065729528,15730556195,18408185143,17086036952,13189185863,15346198577,18756351945,13624637945,15898018101,13045751232,18387073507,18779463654,18482341928,18483660706,18773144431,18718816410,13455766983,13666677436,15393179230,18766370775,15753785174,13099125503,13759457528,15031723804,15127287052,15390443283,17638585463,13969646615,15961290826,15192325537,18295549647,13061349289,18837628285,13365269043,15066169752,18112024455,18039576581,15964963976");
//
//        Map<String,String> map6 = new HashMap<>();
//        map6.put("phone","15723915614,17398180932,13306483566,17133514881,17174380914,13439483674,13035242228,15106549200,18263637107,18660378077,13563171363,13516217818,18654332877,15867221013,13969185414,13686377852,17072181549,18670872217,13371003847,15808329263,18939850380,15860731700,15027338135,17864398538,15906370982,13062090562,13864015098,15665761235,15102582476,18323545520,13519131739,13793988273,13792739817,17562715035,18100732660,17694992926,17345794277,13776851898,15106316091,18868100074,15059411359,15609443218,18794616196,13419219193,13811488549,18660935653,18955886611,18706494367,15000974595,13354483770,13648867931,15506397099,15806563400,18607057235,18216847631,15006789655,18842380732,15970089708,13882228052,15315521052,15666636279,18735112437,18235555590,15970552283,15970470053,17852226387,18939230736,17721255065,13181074978,13636493579,13701656456,17625856253,13367262573,13696312145,18349158626,13993602582,15692883161,18903631160,13301670986,18089010170,18560015089,18231438468,13377892001,15275183603,13027354664,17647478248,13961454714,15606769011,15269999228,13784924998,17695186602,15980814923,17623344759,13817133311,18317218923,18769111852,13547493817,13979077228,18729068334,15883827333,13297803546,13797220606,15678986745,13983249312,13604565557,13433233648,17630526404,13326312559,13526012534,18193647447,18560192298,15635830428,13033030692,13581149333,15501444115,13243076975,15156625014,17696561131,17863716765,13855464051,15570423164,15163972359,13426670145,15014567693,17174428637,15616580772,13681953147,18638805694,17078041022,15564663165,15650572065,15653771742,18731466975,13403411175,13966479074,13197664695,15729422788,13282423492,13053961157,15578738032,13095813604,17131536147,15061526999,13972241150,15271340942,13268738439,18256156754,13526100571,13030190279,15552638565,13923044745,18774437121,18331690040,15636058396,13400617399,15965955590,18781905044,15666624621,13455633634,17052972858,15142917551,18087642248,15065729528,15730556195,18408185143,17086036952,13189185863,15346198577,18756351945,13624637945,15898018101,13045751232,18387073507,18779463654,18482341928,18483660706,18773144431,18718816410,13455766983,13666677436,15393179230,18766370775,15753785174,13099125503,13759457528,15031723804,15127287052,15390443283,17638585463,13969646615,15961290826,15192325537,18295549647,13061349289,18837628285,13365269043,15066169752,18112024455,18039576581,15964963976");
//
//        Map<String,String> map7 = new HashMap<>();
//        map7.put("phone","15723915615,17398180932,13306483566,17133514881,17174380914,13439483674,13035242228,15106549200,18263637107,18660378077,13563171363,13516217818,18654332877,15867221013,13969185414,13686377852,17072181549,18670872217,13371003847,15808329263,18939850380,15860731700,15027338135,17864398538,15906370982,13062090562,13864015098,15665761235,15102582476,18323545520,13519131739,13793988273,13792739817,17562715035,18100732660,17694992926,17345794277,13776851898,15106316091,18868100074,15059411359,15609443218,18794616196,13419219193,13811488549,18660935653,18955886611,18706494367,15000974595,13354483770,13648867931,15506397099,15806563400,18607057235,18216847631,15006789655,18842380732,15970089708,13882228052,15315521052,15666636279,18735112437,18235555590,15970552283,15970470053,17852226387,18939230736,17721255065,13181074978,13636493579,13701656456,17625856253,13367262573,13696312145,18349158626,13993602582,15692883161,18903631160,13301670986,18089010170,18560015089,18231438468,13377892001,15275183603,13027354664,17647478248,13961454714,15606769011,15269999228,13784924998,17695186602,15980814923,17623344759,13817133311,18317218923,18769111852,13547493817,13979077228,18729068334,15883827333,13297803546,13797220606,15678986745,13983249312,13604565557,13433233648,17630526404,13326312559,13526012534,18193647447,18560192298,15635830428,13033030692,13581149333,15501444115,13243076975,15156625014,17696561131,17863716765,13855464051,15570423164,15163972359,13426670145,15014567693,17174428637,15616580772,13681953147,18638805694,17078041022,15564663165,15650572065,15653771742,18731466975,13403411175,13966479074,13197664695,15729422788,13282423492,13053961157,15578738032,13095813604,17131536147,15061526999,13972241150,15271340942,13268738439,18256156754,13526100571,13030190279,15552638565,13923044745,18774437121,18331690040,15636058396,13400617399,15965955590,18781905044,15666624621,13455633634,17052972858,15142917551,18087642248,15065729528,15730556195,18408185143,17086036952,13189185863,15346198577,18756351945,13624637945,15898018101,13045751232,18387073507,18779463654,18482341928,18483660706,18773144431,18718816410,13455766983,13666677436,15393179230,18766370775,15753785174,13099125503,13759457528,15031723804,15127287052,15390443283,17638585463,13969646615,15961290826,15192325537,18295549647,13061349289,18837628285,13365269043,15066169752,18112024455,18039576581,15964963976");

//        post("线程请求",map1);


//        Thread thread1 = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                post("线程请求",map1);
//            }
//        });
//
//        Thread thread2 = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                post("线程请求",map2);
//            }
//        });
//
//        Thread thread3 = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                post("线程请求",map3);
//            }
//        });
//
//        Thread thread4 = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                post("线程请求",map4);
//            }
//        });
//
//        Thread thread5 = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                post("线程请求",map5);
//            }
//        });
//
//        Thread thread6 = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                post("线程请求",map6);
//            }
//        });
//
//        Thread thread7 = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                post("线程请求",map7);
//            }
//        });
//
//        thread1.start();
//        thread2.start();
//        thread3.start();
//        thread4.start();
//        thread5.start();
//        thread6.start();
//        thread7.start();

    }

    public static class ThreadPoolTask implements Runnable{

        @Override
        public void run() {

            //便于观察数据
            try {
                Thread.sleep(300);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            String[] s = Thread.currentThread().getName().split("-");

            Map<String,String> map = new HashMap<>();
//            map.put("password","286141");
//            map.put("cdkey","9SDK-EMY-0999-JBVLP");
//            map.put("message","【汇盈金服】尊敬的用户：祝您生日快乐！愿您每一天都温馨幸福。在这特别的日子里，感谢您长期以来的相伴与支持！");
            map.put("phone",s[3]);
//                    +","+"16723915615,18398180932,13006483566,19133514881,18174380914,13469483674,13075242228,15806549200,18293637107,10660378077,13553171363,13616217818,18754332877,18867221013,13960185414,13685377852,17472181549,16670872217,17371003847,18808329263,18939950380,15890731700,15097338135,17894398538,15996370982,13962090562,13964015098,15965761235,15192582476,18393545520,13919131739,13993988273,13992739817,17962715035,19100732660,19694992926,19345794277,13976851898,15906316091,18968100074,15959411359,19609443218,19794616196,19419219193,13911488549,18960935653,18995886611,18906494367,15900974595,13394483770,13649867931,15596397099,15906563400,18907057235,18916847631,15906789655,18942380732,15990089708,13882229052,15315591052,15696636279,18795112437,18295555590,15990552283,15979470053,17892226387,18939290736,  17721255065,13181074978,13636493579,13701656456,17625856253,13367262573,13696312145,18349158626,13993602582,15692883161,18903631160,13301670986,18089010170,18560015089,18231438468,13377892001,15275183603,13027354664,17647478248,13961454714,15606769011,15269999228,13784924998,17695186602,15980814923,17623344759,13817133311,18317218923,18769111852,13547493817,13979077228,18729068334,15883827333,13297803546,13797220606,15678986745,13983249312,13604565557,13433233648,17630526404,13326312559,13526012534,18193647447,18560192298,15635830428,13033030692,13581149333,15501444115,13243076975,15156625014,17696561131,17863716765,13855464051,15570423164,15163972359,13426670145,15014567693,17174428637,15616580772,13681953147,18638805694,17078041022,15564663165,15650572065,15653771742,18731466975,13403411175,13966479074,13197664695,15729422788,13282423492,13053961157,15578738032,13095813604,17131536147,15061526999,13972241150,15271340942,13268738439,18256156754,13526100571,13030190279,15552638565,13923044745,18774437121,18331690040,15636058396,13400617399,15965955590,18781905044,15666624621,13455633634,17052972858,15142917551,18087642248,15065729528,15730556195,18408185143,17086036952,13189185863,15346198577,18756351945,13624637945,15898018101,13045751232,18387073507,18779463654,18482341928,18483660706,18773144431,18718816410,13455766983,13666677436,15393179230,18766370775,15753785174,13099125503,13759457528,15031723804,15127287052,15390443283,17638585463,13969646615,15961290826,15192325537,18295549647,13061349289,18837628285,13365269043,15066169752,18112024455,18039576581,15964963976");
//            post("http://127.0.0.1:8081/workname/getPhone",map);
            post("http://127.0.0.1:8084/hyjf-web/landingPage/getPhone",map);

        }
    }

}
